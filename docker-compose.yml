services:
  api-gateway:
    build: ./PA_Backend
    ports:
      - "5000:5000"
    volumes:
      - ./PA_Backend:/app
    depends_on:
      - db
      - auth-service
      - finance-service
      - ai-chatbot-service
    environment:
      - DATABASE_URL=postgresql+asyncpg://user:password@db/app
      - AUTH_SERVICE_URL=http://auth-service:8080
      - FINANCE_SERVICE_URL=http://finance-service:8081
      - AI_CHATBOT_SERVICE_URL=http://ai-chatbot-service:8001
      - JWT_SECRET_KEY=super-secret-jwt-key # This should be in .env in production
      - PYTHONUNBUFFERED=1

  auth-service:
    build: ./PA_Java_Services/auth-service
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/app
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - JWT_SECRET_KEY=super-secret-jwt-key # This should be in .env in production

  finance-service:
    build: ./PA_Java_Services/finance-service
    ports:
      - "8081:8081"
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/app
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - JWT_SECRET_KEY=super-secret-jwt-key # This should be in .env in production

  ai-chatbot-service:
    build: ./PA_AI_Chatbot
    ports:
      - "8001:8001"
    depends_on:
      - db # If AI chatbot needs direct DB access, otherwise remove
    environment:
      - NCC_USER=${NCC_USER}
      - NCC_HOST=${NCC_HOST}
      - NCC_PRIVATE_KEY_PATH=${NCC_PRIVATE_KEY_PATH}
      - NCC_REMOTE_JOB_DIR=${NCC_REMOTE_JOB_DIR}
      - NCC_REMOTE_INFERENCE_SCRIPT_PATH=${NCC_REMOTE_INFERENCE_SCRIPT_PATH}
      - NCC_REMOTE_VENV_PATH=${NCC_REMOTE_VENV_PATH}
      - PYTHONUNBUFFERED=1

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password

  frontend:
    build: ./PA_Flutter
    ports:
      - "8080:80"
    depends_on:
      - api-gateway

volumes:
  postgres_data: